/*
	This test checks whether the application was successfully installed without the version number in the package
	when installApps is called and stripVersion is set to true.
*/
group = 'liberty.gradle'
version = '1'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = 'Sonatype Nexus Snapshots'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath group: 'net.wasdev.wlp.gradle.plugins', name: 'liberty-gradle-plugin', version: lgpVersion
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'liberty'

sourceCompatibility = 1.7
targetCompatibility = 1.7

compileJava.options.encoding = 'UTF-8'

ext {
    // Liberty server properties
    wlpServerName = 'LibertyProjectServer'
    serverDirectory = "${project.buildDir}/wlp/usr/servers/${wlpServerName}"
    testServerHttpPort = 9080
    testServerHttpsPort = 9443

    // This is set in the ibm-web-ext.xml file
    warContext = 'sample.servlet-1'
    appName = 'LibertyProject'
    packageFile = "${project.buildDir}/${appName}.zip"
    packagingType = 'usr'

}

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
  war2.extendsFrom runtime
}

dependencies {
    testCompile localGroovy()
    testCompile 'junit:junit:4.12'
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.1.0'
    compile 'org.apache.commons:commons-text:1.1'
    war2 'org.apache.commons:commons-proxy:1.0'
    libertyRuntime group: runtimeGroup, name: runtimeArtifactId, version: runtimeVersion
}

sourceSets {
    main {
        java {
            srcDir "${project.projectDir}/../../../resources/test/sample.servlet/src/main/java"
        }
    }
}

project.webAppDirName = "../../../resources/test/sample.servlet/src/main/webapp"

task war1(type:War){
    baseName = 'sample.servlet1'
}

task war2(type:War){
    baseName = 'sample.servlet2'
    classpath = configurations.war2
}

liberty {
    server{
        name = wlpServerName
        looseApplication = true
        stripVersion = true
        configFile = file("${project.projectDir}/../../../resources/test/sample.servlet/src/main/liberty/config/server-list-test.xml")
        packageLiberty {
            archive = packageFile
            include = packagingType
        }
    	apps = [war1, war2]
      verifyAppStartTimeout = 30
    }
}

test {
    dependsOn 'libertyStart'
    finalizedBy 'libertyStop'
}

task runGradleTest {
    dependsOn 'test'
}