apply plugin: 'liberty'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = 'Sonatype Nexus Snapshots'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath fileTree(dir: '../libs', include: '*.jar', exclude: ['*-groovydoc.jar', '*-sources.jar'])
        classpath group: 'net.wasdev.wlp.gradle.plugins', name: 'liberty-gradle-plugin', version: lgpVersion
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

task copyWlpDir(type:Copy) {
    from "${project.projectDir}/../../../wlp"
    into "$buildDir/wlp"
}

installLiberty.dependsOn 'copyWlpDir'

liberty {

    installDir = "$buildDir/wlp"
    
    server{
        name = 'LibertyProjectServer'
        deploy {
            file = "$projectDir/../../../resources/test/test-war.war"
        }

        packageLiberty {
            include = 'minify'
            os='Linux'
        }

        features {
            name= ['mongodb-2.0']
            acceptLicense = true
        }

        uninstallfeatures {
            name= ['mongodb-2.0']
        }
    }
}

libertyStop.finalizedBy 'libertyPackage'
deploy.finalizedBy 'undeploy'
libertyStart.finalizedBy 'libertyStop'
libertyStop.dependsOn 'deploy'
libertyPackage.finalizedBy 'uninstallFeature'
uninstallFeature.finalizedBy 'cleanDirs'

task taskTests {
    dependsOn 'libertyCreate', 'installFeature', 'libertyStatus', 'libertyStart'

    doLast {
        assert installLiberty.getState().getExecuted()
        assert libertyCreate.getState().getExecuted()
        assert installFeature.getState().getExecuted()
        assert uninstallFeature.getState().getExecuted()
        assert deploy.getState().getExecuted()
        assert undeploy.getState().getExecuted()
        assert libertyStart.getState().getExecuted()
        assert libertyStop.getState().getExecuted()
        assert libertyPackage.getState().getExecuted()
        assert cleanDirs.getState().getExecuted()
    }
}

task runGradleTest {
    dependsOn 'taskTests'
}
