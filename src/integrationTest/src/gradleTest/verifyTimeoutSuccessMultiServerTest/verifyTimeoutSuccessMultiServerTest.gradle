group = 'liberty.gradle'
version = '1'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'liberty'

sourceCompatibility = 1.7
targetCompatibility = 1.7

compileJava.options.encoding = 'UTF-8'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = 'Sonatype Nexus Snapshots'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath group: 'net.wasdev.wlp.gradle.plugins', name: 'liberty-gradle-plugin', version: lgpVersion
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    testCompile localGroovy()
    testCompile 'junit:junit:4.12'
    testCompile 'org.apache.cxf:cxf-rt-rs-client:3.1.1'
    testCompile 'org.glassfish:javax.json:1.0.4'
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.1.0'
    libertyRuntime group: runtimeGroup, name: runtimeArtifactId, version: runtimeVersion
}

sourceSets {
    main {
        java {
            srcDir "${project.projectDir}/../../../resources/test/sample.servlet/src/main/java"
        }
    }
}

project.webAppDirName = "../../../resources/test/sample.servlet/src/main/webapp"

task copyWlpDir(type:Copy) {
    from "${project.projectDir}/../../../wlp"
    into "$buildDir/wlp"
}

installLiberty.dependsOn 'copyWlpDir'

liberty {

    installDir = "$buildDir/wlp"
    
    servers {
        libertyServer1 {
            apps = [war]

            configFile = file("${project.projectDir}/../../../resources/test/sample.servlet/src/main/liberty/config/multi-server-test.xml")

            bootstrapProperties = ['httpPort': '9097', 'httpsPort': '9459']

            looseApplication = false

            verifyAppStartTimeout = 30
        }
        libertyServer2 {
            apps = [war]

            configFile = file("${project.projectDir}/../../../resources/test/sample.servlet/src/main/liberty/config/multi-server-test.xml")

            bootstrapProperties = ['httpPort': '9098', 'httpsPort': '9460']

            looseApplication = false

            verifyAppStartTimeout = 30
        }
        libertyServer3 {
            apps = [war]

            configFile = file("${project.projectDir}/../../../resources/test/sample.servlet/src/main/liberty/config/multi-server-test.xml")

            bootstrapProperties = ['httpPort': '9099', 'httpsPort': '9461']

            looseApplication = false

            verifyAppStartTimeout = 30
        }
    }
}

test {
    dependsOn 'libertyStart'
    finalizedBy 'libertyStop'
}

task runGradleTest {
    dependsOn 'test'
}