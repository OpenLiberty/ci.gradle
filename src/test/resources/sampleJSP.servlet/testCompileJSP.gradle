/*
	This test checks whether the compileJsp task was able to compile the index.jsp file from the test
  project
*/
group = 'liberty.gradle'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = 'Sonatype Nexus Snapshots'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath "io.openliberty.tools:liberty-gradle-plugin:$lgpVersion"
    }
}

apply plugin: 'war'
apply plugin: 'liberty'

sourceCompatibility = 1.7
targetCompatibility = 1.7

compileJava.options.encoding = 'UTF-8'

ext {
    // Liberty server properties
    wlpServerName = 'LibertyProjectServer'
    serverDirectory = "${project.buildDir}/wlp/usr/servers/${wlpServerName}"
    testServerHttpPort = 9080
    testServerHttpsPort = 9443

    // This is set in the ibm-web-ext.xml file
    warContext = 'sampleJSP.servlet'

}

liberty {
    server{
        serverXmlFile = file("src/resources/server.xml")
        name = 'LibertyProjectServer'
        deploy {
            apps = [war]
        }
        looseApplication = false
        stripVersion = true
    }
    jsp {
        jspCompileTimeout = 35
    }
}

repositories {
    maven { url "http://repo.maven.apache.org/maven2" }
    mavenCentral()
}

dependencies {
    testCompile group: 'commons-logging', name: 'commons-logging', version:'1.0.4'
    testCompile group: 'junit', name: 'junit', version:'4.9'
    providedCompile group: 'org.apache.geronimo.specs', name: 'geronimo-servlet_3.0_spec', version:'1.0'
    testCompile 'junit:junit:4.12'
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.1.0'
    libertyRuntime group: runtimeGroup, name: runtimeArtifactId, version: runtimeVersion
}

test {
    println 'inside the test block'
    reports.html.destination = file("$buildDir/reports/unit")
    reports.junitXml.destination = file("$buildDir/test-results/unit")
    exclude '**/it/**'
}


task integrationTest(type: Test) {
    group 'Verification'
    description 'Runs the integration tests.'
    reports.html.destination = file("$buildDir/reports/it")
    reports.junitXml.destination = file("$buildDir/test-results/it")
    include '**/it/**'
    exclude '**/unit/**'

    systemProperties = ['liberty.test.port': testServerHttpPort, 'war.name': warContext]
}

task printMessageAboutRunningServer {
    doLast {
        println "The server is now running at http://localhost:${testServerHttpPort}/${warContext}"
        println "To stop the server run 'gradle libertyStop'"
    }
}

deploy.dependsOn 'war'
war.dependsOn 'compileJSP'
integrationTest.dependsOn 'libertyStart', 'testClasses'
integrationTest.finalizedBy 'libertyStop'
libertyStart.finalizedBy 'printMessageAboutRunningServer'
