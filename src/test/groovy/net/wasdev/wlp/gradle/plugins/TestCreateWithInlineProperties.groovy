package net.wasdev.wlp.gradle.plugins;

import java.io.File
import java.io.FileInputStream;
import java.util.Properties;

import org.junit.BeforeClass
import org.junit.Test
import org.apache.commons.io.FileUtils
import io.openliberty.tools.common.plugins.util.OSUtil

public class TestCreateWithInlineProperties extends AbstractIntegrationTest{
    static File sourceDir = new File("build/resources/test/server-config-files")
    static File testBuildDir = new File(integTestDir, "/test-create-with-inline-properties")
    static String buildFilename = "testCreateLibertyInlineProperties.gradle"

    @BeforeClass
    public static void setup() {
        createDir(testBuildDir)
        createTestProject(testBuildDir, sourceDir, buildFilename)
    }

    @Test
    public void test_create_with_inline_properties() {

        runTasks(testBuildDir, 'libertyCreate')

        def bootstrapFile = new File("build/testBuilds/test-create-with-inline-properties/build/wlp/usr/servers/LibertyProjectServer/bootstrap.properties")
        def jvmOptionsFile = new File("build/testBuilds/test-create-with-inline-properties/build/wlp/usr/servers/LibertyProjectServer/jvm.options")
        def configFile = new File("build/testBuilds/test-create-with-inline-properties/build/wlp/usr/servers/LibertyProjectServer/server.xml")
        def serverEnvFile = new File("build/testBuilds/test-create-with-inline-properties/build/wlp/usr/servers/LibertyProjectServer/server.env")

        assert bootstrapFile.exists() : "file not found"
        assert jvmOptionsFile.exists() : "file not found"
        assert configFile.exists() : "file not found"
        assert serverEnvFile.exists() : "file not found"

        if (OSUtil.isWindows()) {
            assert jvmOptionsFile.text.equals("# Generated by liberty-gradle-plugin\r\n-Xms128m\r\n-Xmx512m\r\n") : "jvm inline options did not copy properly "+jvmOptionsFile.text
        } else {
            assert jvmOptionsFile.text.equals("# Generated by liberty-gradle-plugin\n-Xms128m\n-Xmx512m\n") : "jvm inline options did not copy properly "+jvmOptionsFile.text
        }

        assert FileUtils.contentEquals(configFile, new File("build/testBuilds/test-create-with-inline-properties/src/main/liberty/config/server.xml")) : "server.xml file did not copy properly"


        // Verify the bootstrap.properties file contains correct info from inline config
        FileInputStream input1 = new FileInputStream(bootstrapFile);

        Properties prop = new Properties();
        prop.load( input1 );
        String value1 = prop.getProperty("default.http.port");
        assert value1 != null : "bootstrap property not found"
        assert value1.equals("9083") : "bootstrap property has incorrect value"


        // Verify the server.env file does not contain a keystore_password entry
        FileInputStream input2 = new FileInputStream(serverEnvFile);

        prop.clear();
        prop = new Properties();
        prop.load( input2 );
        String value2 = prop.getProperty("keystore_password");
        assert value2 == null : "keystore_password property unexpectedly found"
    }
}
