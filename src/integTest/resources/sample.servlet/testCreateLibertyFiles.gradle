group = 'liberty.gradle'
version = '1'

buildscript {
    repositories {
        mavenCentral()
		mavenLocal()
    }
    dependencies {
        classpath 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:1.1-SNAPSHOT'
        classpath files('gradle/wlp-anttasks.jar')
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'war'
apply plugin: 'liberty'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

ext {
    // Liberty server properties
    wlpServerName = 'LibertyProjectServer'
    serverDirectory = "${project.buildDir}/wlp/usr/servers/${wlpServerName}"
    testServerHttpPort = 9080
    testServerHttpsPort = 9443

    // This is set in the ibm-web-ext.xml file
    warContext = 'myLibertyApp'
    appName = 'LibertyProject'
    packageFile = "${project.buildDir}/${appName}.zip"
    packagingType = 'usr'
    
}

liberty {
    install {
        runtimeUrl = "http://repo1.maven.org/maven2/com/ibm/websphere/appserver/runtime/wlp-webProfile7/17.0.0.2/wlp-webProfile7-17.0.0.2.zip"
    }
    serverName = wlpServerName

    configFile = "${project.projectDir}/src/main/liberty/config/server.xml"
    bootstrapPropertiesFile = "${project.projectDir}/src/main/liberty/config/bootstrap.properties"
    jvmOptionsFile = "${project.projectDir}/src/main/liberty/config/jvm.options"
    serverEnv = "${project.projectDir}/src/main/liberty/config/server.env"
    
    packageLiberty {
        archive = packageFile
        include = packagingType
    }
}

repositories {
    mavenCentral()
    maven {
        name 'liberty-starter-maven-repo'
        url 'http://liberty-starter.wasdev.developer.ibm.com/start/api/v1/repo'
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.apache.cxf:cxf-rt-rs-client:3.1.1'
    testCompile 'org.glassfish:javax.json:1.0.4'
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.1.0'
    runtime 'net.wasdev.wlp.starters.rest:runtime-pom:0.0.3'
}

task integrationTest(type: Test) {
    group 'Verification'
    description 'Runs the integration tests.'
    reports.html.destination = file("$buildDir/reports/it")
    reports.junitXml.destination = file("$buildDir/test-results/it")
    include '**/it/**'
    exclude '**/unit/**'

    systemProperties = ['liberty.test.port': testServerHttpPort, 'war.name': warContext]
}

check.dependsOn 'integrationTest'
libertyCreate.dependsOn 'installLiberty'
integrationTest.dependsOn 'libertyCreate'